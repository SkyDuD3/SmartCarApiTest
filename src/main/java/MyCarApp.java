
import static spark.Spark.*;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.smartcar.sdk.*;
import com.smartcar.sdk.data.*;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author SkyDuDe
 */
public class MyCarApp extends javax.swing.JFrame {

    private final AuthClient client;
    private String access;
    private static Gson gson = new Gson();
    private int z;

    /**
     * Creates new form MyCarApp
     */
    public MyCarApp() {
        initComponents();
        port(8000);
        String clientId = "031302c6-8ec8-4996-8d15-dd6471723284";
        String clientSecret = "fa0cc2dd-546b-4cc1-8a3c-82bedf4b9342";
        String redirectUri = "http://localhost:8000/callback";
        String[] scope = {"read_engine_oil read_battery read_charge read_fuel read_location control_security read_odometer read_tires read_vehicle_info read_vin"};

        boolean testMode = true;

        client = new AuthClient(
                clientId,
                clientSecret,
                redirectUri,
                scope,
                testMode
        );
        CarController cc = new CarController();
        cc.getAccess(client);
        access = System.getProperty("access");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        veh = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        vehs = new javax.swing.JButton();
        jQuant = new javax.swing.JSpinner();
        jOdometer = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayOdo = new javax.swing.JTextArea();
        jRangeStats = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        fuelBar = new javax.swing.JProgressBar();
        jFuelstatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jFuelRange = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        JFuelTank = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jOilBar = new javax.swing.JProgressBar();
        jOilStat = new javax.swing.JLabel();
        JFstatsUpdate = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        batteryBar = new javax.swing.JProgressBar();
        jBatn = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jBatteryRange = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        JBstatsUpdate = new javax.swing.JButton();
        jState = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jBatteryCap = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jPlugy = new javax.swing.JToggleButton();
        jPlugn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        display.setEditable(false);
        display.setColumns(20);
        display.setLineWrap(true);
        display.setTabSize(0);
        jScrollPane1.setViewportView(display);

        veh.setText("Vehicle");
        veh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );

        vehs.setText("Vehicles");
        vehs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehsActionPerformed(evt);
            }
        });

        jOdometer.setText("Odometer");
        jOdometer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOdometerActionPerformed(evt);
            }
        });

        displayOdo.setEditable(false);
        displayOdo.setColumns(20);
        displayOdo.setLineWrap(true);
        displayOdo.setTabSize(0);
        displayOdo.setToolTipText("");
        displayOdo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane3.setViewportView(displayOdo);

        jFuelstatus.setText("-----");

        jLabel1.setText("Fuel");

        jLabel5.setText("Range");

        jFuelRange.setEditable(false);
        jFuelRange.setColumns(20);
        jFuelRange.setLineWrap(true);
        jFuelRange.setTabSize(0);
        jFuelRange.setToolTipText("");
        jFuelRange.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane4.setViewportView(jFuelRange);

        jLabel6.setText("Fuel in the Tank ");

        JFuelTank.setEditable(false);
        JFuelTank.setColumns(20);
        JFuelTank.setLineWrap(true);
        JFuelTank.setTabSize(0);
        JFuelTank.setToolTipText("");
        JFuelTank.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane5.setViewportView(JFuelTank);

        jLabel7.setText("Engine Oil Efficiency ");

        jOilBar.setForeground(new java.awt.Color(255, 0, 0));

        jOilStat.setText("-----------------------");

        JFstatsUpdate.setText("Update Stats");
        JFstatsUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFstatsUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jOilStat))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fuelBar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jOilBar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(jFuelstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(72, 72, 72)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JFstatsUpdate)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jFuelstatus)
                    .addComponent(JFstatsUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fuelBar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOilBar, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOilStat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jRangeStats.addTab("Fuel Stats", jPanel2);

        jLabel2.setText("Battery");

        jBatn.setText("------------");

        jBatteryRange.setEditable(false);
        jBatteryRange.setColumns(20);
        jBatteryRange.setLineWrap(true);
        jBatteryRange.setTabSize(0);
        jBatteryRange.setToolTipText("");
        jBatteryRange.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane6.setViewportView(jBatteryRange);

        jLabel8.setText("Range");

        jLabel9.setText("Plugged-in");

        jLabel10.setText("State");

        JBstatsUpdate.setText("Update Stats");
        JBstatsUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBstatsUpdateActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 51, 51));
        jLabel13.setText("NOT_CHARGING");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 51));
        jLabel14.setText("CHARGING ");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 255, 51));
        jLabel15.setText("FULLY_CHARGED ");

        jBatteryCap.setEditable(false);
        jBatteryCap.setColumns(20);
        jBatteryCap.setLineWrap(true);
        jBatteryCap.setTabSize(0);
        jBatteryCap.setToolTipText("");
        jBatteryCap.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane7.setViewportView(jBatteryCap);

        jLabel11.setText("Battery Capacity");

        jPlugy.setText("Plugged-In");

        jPlugn.setText("Not Plugged-in");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(jState, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(batteryBar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPlugy, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPlugn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBatn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JBstatsUpdate))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jBatn)
                            .addComponent(JBstatsUpdate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(batteryBar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPlugy)
                    .addComponent(jPlugn))
                .addGap(8, 8, 8)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jRangeStats.addTab("Battery Stats", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jOdometer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(login)
                                .addGap(18, 18, 18)
                                .addComponent(veh)
                                .addGap(4, 4, 4)
                                .addComponent(jQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(vehs)))
                        .addGap(0, 366, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRangeStats, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login)
                    .addComponent(veh)
                    .addComponent(vehs)
                    .addComponent(jQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jOdometer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRangeStats))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        OpenBrowser openBrowser = new OpenBrowser("http://localhost:8000/login");
        display.append("Brownser should be open!\n");
    }//GEN-LAST:event_loginActionPerformed

    private void vehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehActionPerformed
        display.setText("");
        try {
            BufferedReader brTest = new BufferedReader(new FileReader("\\acess"));
            access = brTest.readLine();
            try {
                z = (int) jQuant.getValue();
                SmartcarResponse<VehicleIds> vehicleIdResponse = AuthClient.getVehicleIds(access);
                // the list of vehicle ids
                String[] vehicleIds = vehicleIdResponse.getData().getVehicleIds();

                // instantiate the first vehicle in the vehicle id list
                Vehicle vehicle = new Vehicle(vehicleIds[z], access);

                VehicleInfo info = vehicle.info();

                System.out.println(gson.toJson(info));
                display.append(gson.toJson(info) + "\n");

                JsonParser parser = new JsonParser();
                JsonObject obj = parser.parse(gson.toJson(info)).getAsJsonObject();
                String id = obj.get("id").getAsString();
                String make = obj.get("make").getAsString();
                String model = obj.get("model").getAsString();
                String year = obj.get("year").getAsString();
                display.append("id = " + id + "\n");
                display.append("make = " + make + "\n");
                display.append("model = " + model + "\n");
                display.append("year = " + year + "\n");

            } catch (SmartcarException ex) {
                Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (IOException ex) {
            Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_vehActionPerformed

    private void jOdometerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOdometerActionPerformed
        displayOdo.setText("");
        try {
            BufferedReader brTest = new BufferedReader(new FileReader("\\acess"));
            access = brTest.readLine();
            try {
                z = (int) jQuant.getValue();
                String odom = "";
                SmartcarResponse<VehicleIds> vehicleIdsResponse = AuthClient.getVehicleIds(access);
                String[] vehicleIds = vehicleIdsResponse.getData().getVehicleIds();
                Vehicle vehicle = new Vehicle(vehicleIds[z], access);
                SmartcarResponse<VehicleOdometer> odometerResponse = vehicle.odometer();
                VehicleOdometer odometerData = odometerResponse.getData();
                double odometer = odometerData.getDistance();
                //odom =  ""+odometer+"" ;
                System.out.println(odom);
                System.out.println(gson.toJson(odom));
                System.out.println(gson.toJson(odom));
                displayOdo.append(z + gson.toJson(odometer + " Kilometers"));

            } catch (SmartcarException ex) {
                Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (IOException ex) {
            Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jOdometerActionPerformed

    private void vehsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehsActionPerformed
        try {
            BufferedReader brTest = new BufferedReader(new FileReader("\\acess"));
            access = brTest.readLine();
            try {
                SmartcarResponse<VehicleIds> vehicleIdResponse = AuthClient.getVehicleIds(access);
                // the list of vehicle ids
                String[] vehicleIds = vehicleIdResponse.getData().getVehicleIds();
                int z = 0;
                String bla = "";
                // instantiate the first vehicle in the vehicle id list
                for (String v : vehicleIds) {
                    Vehicle vehicle = new Vehicle(v, access);
                    VehicleInfo info = vehicle.info();
                    bla = bla + gson.toJson(info);
                    System.out.println(gson.toJson(info));
                    display.append("id " + z + gson.toJson(info) + "\n");
                    z++;
                    JsonParser parser = new JsonParser();
                    JsonObject obj = parser.parse(gson.toJson(info)).getAsJsonObject();
                    String id = obj.get("id").getAsString();
                    String make = obj.get("make").getAsString();
                    String model = obj.get("model").getAsString();
                    String year = obj.get("year").getAsString();
                    display.append("id = " + id + "\n");
                    display.append("make = " + make + "\n");
                    display.append("model = " + model + "\n");
                    display.append("year = " + year + "\n");
                }
            } catch (SmartcarException ex) {
                Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (IOException ex) {
            Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_vehsActionPerformed

    private void JFstatsUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFstatsUpdateActionPerformed
        jFuelRange.setText("");
        JFuelTank.setText("");
        try {
            BufferedReader brTest = new BufferedReader(new FileReader("\\acess"));
            access = brTest.readLine();
            try {
                SmartcarResponse<VehicleIds> vehicleIdsResponse = AuthClient.getVehicleIds(access);
                String[] vehicleIds = vehicleIdsResponse.getData().getVehicleIds();
                Vehicle vehicle = new Vehicle(vehicleIds[z], access);

                SmartcarResponse<VehicleFuel> VehicleFuelResponse = vehicle.fuel();
                VehicleFuel Vehiclefuel = VehicleFuelResponse.getData();
                double vehrange = Vehiclefuel.getRange();
                double vehperc = Vehiclefuel.getPercentRemaining();
                double vehrem = Vehiclefuel.getAmountRemaining();
                vehperc = vehperc * 100;
                jFuelstatus.setText(vehperc + "%");
                fuelBar.setValue((int) vehperc);
                jFuelRange.append(gson.toJson(vehrange + " Kilometers"));
                JFuelTank.append(gson.toJson(vehrem + " Liters"));
/////////////////////////////////oil////////////////////////////////////////////////////////////
                SmartcarResponse<VehicleOil> VehicleOilResponse = vehicle.oil();
                VehicleOil vehicleoilData = VehicleOilResponse.getData();
                double vehoil = vehicleoilData.getLifeRemaining();
                vehoil = vehoil * 100;
                jOilBar.setValue((int) vehoil);
                jOilStat.setText(vehoil + "%");

            } catch (SmartcarException ex) {
                Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (IOException ex) {
            Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_JFstatsUpdateActionPerformed

    private void JBstatsUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBstatsUpdateActionPerformed
        jBatteryRange.setText("");
        jBatteryCap.setText("");
        try {
            BufferedReader brTest = new BufferedReader(new FileReader("\\acess"));
            access = brTest.readLine();
            try {
                SmartcarResponse<VehicleIds> vehicleIdsResponse = AuthClient.getVehicleIds(access);
                String[] vehicleIds = vehicleIdsResponse.getData().getVehicleIds();
                Vehicle vehicle = new Vehicle(vehicleIds[z], access);
////////////////////////////////////////capacidade da bateria////////////////////////////////////
                SmartcarResponse<VehicleBattery> VehicleBatteryResponse = vehicle.battery();
                VehicleBattery vehicleBattery = VehicleBatteryResponse.getData();
                double vehbat = vehicleBattery.getPercentRemaining();
                double vehbatr = vehicleBattery.getRange();
                vehbat = vehbat * 100;
                batteryBar.setValue((int) vehbat);
                jBatn.setText(vehbat + "%");
                jBatteryRange.append(gson.toJson(vehbatr + " Kilometers"));
////////////////////////////////////////bateria geral da bateria////////////////////////////////////
                SmartcarResponse<VehicleBatteryCapacity> VehicleBatteryCapacityResponse = vehicle.batteryCapacity();
                VehicleBatteryCapacity vehiclebatteryCapacity = VehicleBatteryCapacityResponse.getData();
                double vehbatc = vehiclebatteryCapacity.getCapacity();
                jBatteryCap.append(gson.toJson(vehbatc + " kilowatt-hours"));
                //jBatn.setText(vehbatc + " kilowatt-hours");

///////////////////////////////////////Carregamento da bateria////////////////////////////////
                SmartcarResponse<VehicleCharge> VehicleChargeResponse = vehicle.charge();
                VehicleCharge vehiclecharge = VehicleChargeResponse.getData();
                boolean vehplug = vehiclecharge.getIsPluggedIn();
                String vehpstate = vehiclecharge.getState();
                System.out.println(vehplug);
                if (vehplug == true) {
                    jPlugy.setText("Plugged in");
                    jPlugy.setBackground(Color.black);
                    jPlugy.setForeground(Color.green);
                    jPlugn.setBackground(Color.black);
                    jPlugn.setForeground(Color.black);

                } else {

                    jPlugn.setText("Not Plugged in");
                    jPlugn.setBackground(Color.black);
                    jPlugn.setForeground(Color.red);
                    jPlugy.setBackground(Color.black);
                    jPlugy.setForeground(Color.black);

                }

                if ("NOT_CHARGING".equals(vehpstate)) {
                    jState.setValue(0);
                } else if ("CHARGING".equals(vehpstate)) {
                    jState.setValue(50);
                } else if ("FULLY_CHARGED".equals(vehpstate)) {
                    jState.setValue(100);
                }

            } catch (SmartcarException ex) {
                Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (IOException ex) {
            Logger.getLogger(MyCarApp.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_JBstatsUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyCarApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyCarApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyCarApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyCarApp.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyCarApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBstatsUpdate;
    private javax.swing.JButton JFstatsUpdate;
    private javax.swing.JTextArea JFuelTank;
    private javax.swing.JProgressBar batteryBar;
    private javax.swing.JTextArea display;
    private javax.swing.JTextArea displayOdo;
    private javax.swing.JProgressBar fuelBar;
    private javax.swing.JLabel jBatn;
    private javax.swing.JTextArea jBatteryCap;
    private javax.swing.JTextArea jBatteryRange;
    private javax.swing.JTextArea jFuelRange;
    private javax.swing.JLabel jFuelstatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jOdometer;
    private javax.swing.JProgressBar jOilBar;
    private javax.swing.JLabel jOilStat;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToggleButton jPlugn;
    private javax.swing.JToggleButton jPlugy;
    private javax.swing.JSpinner jQuant;
    private javax.swing.JTabbedPane jRangeStats;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSlider jState;
    private javax.swing.JButton login;
    private javax.swing.JButton veh;
    private javax.swing.JButton vehs;
    // End of variables declaration//GEN-END:variables
}
